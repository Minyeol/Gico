<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@drawable/appmenu1"
    tools:context=".study.unit6.FragmentContent6_3">

    <!-- TODO: Update blank fragment layout -->

    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_above="@+id/homeButton4_3"
        android:layout_alignParentStart="true"
        android:layout_alignParentLeft="true"
        android:layout_alignParentTop="true"
        android:layout_alignParentEnd="true"
        android:layout_alignParentRight="true"
        android:layout_marginStart="30dp"
        android:layout_marginTop="30dp"
        android:layout_marginEnd="30dp"
        android:layout_marginBottom="30dp"
        android:background="@drawable/edge">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical">

            <TextView
                android:id="@+id/textView621"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:text="    이제 실제로 재귀함수를 사용해서 피보나치 수열을 구현해 봅시다. 피보나치 수열은 다음과 같은 일반항을 따르는 수열입니다.\n\n

 a_n = a_(n-1) + a_(n-2), a_1 = 1, a_2 = 1\n\n

 다시 말해서, 피보나치 수열은 인접한 두 항을 더해 그 값을 다음 항의 값으로 취하는 수열입니다. 처음 몇 항을 적어 보면 다음과 같습니다.\n\n

 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89\n\n

 재귀함수를 구현하기 위해 이 문제의 base case를 정해 볼까요? base case를 a_1 = 1, a_2 = 1로 정할 수도 지만, 그러면 함수에 n = 0을 대입했을 때 문제가 생기게 되므로 a_0 = 0을 반드시 설정해 주도록 합시다. 저는 base case로 a_0 = 0, a_1 = 1을 잡았습니다.\n
 다음으로 recursive step을 만들 차례입니다. 문제 fibonacci(20)은 어떻게 풀 수 있을까요? fibonacci(19)와 fibonacci(18)을 알면 풀 수 있겠죠. 이를 일반화하면, fibonacci(n)은 fibonacci(n-1)과 fibonacci(n-2)를 더해서 풀 수 있음을 알게 됩니다. 이를 코드로 바꾸면 다음과 같습니다.\n
" />

            <ImageView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:adjustViewBounds="true"
                android:src="@drawable/recur21" />

            <ImageView
                android:id="@+id/imageView5"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:adjustViewBounds="true"
                android:src="@drawable/recur22" />

            <TextView
                android:id="@+id/textView622"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:text="\n    전의 factorial 함수와는 다르게, 이번 fibonacci 함수는 자기 자신을 두 번씩 호출한다는 점을 알아 둡시다. 바로 이 특성 때문에, 사실 이 코드는 매우 비효율적인 코드가 되기 때문입니다. 이 점에 대해서는 나중에 설명하겠습니다.\n" />
        </LinearLayout>
    </ScrollView>

    <ImageButton
        android:id="@+id/homeButton4_3"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentBottom="true"
        android:layout_marginStart="28dp"
        android:layout_marginLeft="28dp"
        android:layout_marginEnd="28dp"
        android:layout_marginRight="28dp"
        android:layout_marginBottom="30dp"
        android:layout_toStartOf="@+id/forwardButton4_3"
        android:layout_toLeftOf="@+id/forwardButton4_3"
        android:layout_toEndOf="@+id/backButton4_3"
        android:layout_toRightOf="@+id/backButton4_3"
        android:src="@drawable/home_button" />

    <ImageButton
        android:id="@+id/forwardButton4_3"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentEnd="true"
        android:layout_alignParentRight="true"
        android:layout_alignParentBottom="true"
        android:layout_marginEnd="70dp"
        android:layout_marginRight="70dp"
        android:layout_marginBottom="30dp"
        android:src="@drawable/forward_button" />

    <ImageButton
        android:id="@+id/backButton4_3"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentStart="true"
        android:layout_alignParentLeft="true"
        android:layout_alignParentBottom="true"
        android:layout_marginStart="69dp"
        android:layout_marginLeft="69dp"
        android:layout_marginBottom="30dp"
        android:src="@drawable/back_button" />

</RelativeLayout>