<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@drawable/appmenu1"
    tools:context=".study.unit2.FragmentContent2_4">

    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_above="@+id/homeButton2_4"
        android:layout_alignParentStart="true"
        android:layout_alignParentLeft="true"
        android:layout_alignParentTop="true"
        android:layout_alignParentEnd="true"
        android:layout_alignParentRight="true"
        android:layout_centerHorizontal="true"
        android:layout_marginStart="30dp"
        android:layout_marginLeft="30dp"
        android:layout_marginTop="29dp"
        android:layout_marginEnd="30dp"
        android:layout_marginRight="30dp"
        android:layout_marginBottom="31dp"
        android:background="@color/white">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical">

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:text="이번에는 switch 분기문으로 다양한 조건을 처리하는 방법을 알아보겠습니다.
else if를 사용하면 여러 조건을 처리할 수 있지만 매번 조건식을 지정해줘야 해서 다소 번거롭습니다. 하지만 switch 분기문은 조건이 많아도 손쉽게 처리할 수 있습니다.
switch 분기문은 다음과 형식이 균일하며 처리해야 할 조건이 많을 때 사용합니다." />

            <ImageView
                android:adjustViewBounds="true"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:src="@drawable/conditional15" />

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:text="switch 분기문은 항상 case와 함께 사용하는데 변수의 값이 case에 지정한 값과 일치하면 해당 코드를 실행하게 됩니다(단, case에는 조건식이나 변수를 지정할 수 없습니다). 그리고 아무 case에도 해당되지 않으면 default의 코드를 실행합니다(default는 생략할 수 있습니다). break는 switch 문의 중괄호를 끝냅니다. break를 쓰지 않으면 계속해서 아래의 case가 실행됩니다. " />

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:text="다음 예제 코드를 실행시켜 보세요." />

            <ImageView
                android:adjustViewBounds="true"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:src="@drawable/conditional16" />

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:text="case 다음에는 반드시 값(리터럴)이 와야 하고 변수나 조건식은 올 수 없습니다. 그리고 case에 값을 지정했으면 **:** (콜론)을 붙여 준 뒤 다음 줄부터 실행할 코드를 입력합니다. 또한, 코드의 마지막에는 break를 입력하여 중괄호를 끝냅니다. 위의 예제 코드를 switch 분기문 대신 if 조건문으로 표현하면 다음과 같은 모양이 됩니다." />

            <ImageView
                android:adjustViewBounds="true"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:src="@drawable/conditional17" />

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:text="if는 첫 조건식 다음에 else if로 다른 조건식을 모두 지정해줘야 합니다. 따라서 조건식이 바뀌지 않고 값만 바뀔 때는 switch를 사용하면 편리하고, 값과 조건이 모두 바뀔 때는 else if를 사용해야 합니다. " />

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:text="앞에서는 각 case마다 break를 붙여주었는데 break가 없으면 어떻게 될까요? 앞의 소스에서 break를 모두 삭제하고 실행시켜 봅시다." />

            <ImageView
                android:adjustViewBounds="true"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:src="@drawable/conditional18" />

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:text="case 1:만 실행되지 않고, case 2:, default:가 모두 실행되었습니다. 즉, case를 작성할 때는 마지막 부분에서 break로 중단해주어야 해당 case만 실행됩니다. 그러므로 case를 break로 중단하지 않으면 그다음에 있는 case, default가 계속 실행됩니다. 이런 상황을 fall through라고 부릅니다." />

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:text="case에서 break를 생략하는 것은 의도적으로 사용되기도 합니다. 다음 내용을 실행해 보세요." />

            <ImageView
                android:adjustViewBounds="true"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:src="@drawable/conditional19" />

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:text="이렇게 case 1:과 case 2:를 연달아서 지정하면 num1의 값이 1일 때도 코드가 실행되고 2일 때도 코드가 실행됩니다. 마찬가지로 case 3:과 case 4:도 연달아서 지정했으므로 num1의 값이 3 또는 4일 때 코드가 실행됩니다. switch에서 판별할 변수는 정수 자료형만 사용할 수 있고, 실수 자료형(float, double)은 사용할 수 없습니다. 단, 문자 자료형(char)도 정수 자료형이므로 switch에서 사용할 수 있습니다." />
        </LinearLayout>

    </ScrollView>

    <ImageButton
        android:id="@+id/homeButton2_4"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentBottom="true"
        android:layout_marginStart="28dp"
        android:layout_marginLeft="28dp"
        android:layout_marginEnd="28dp"
        android:layout_marginRight="28dp"
        android:layout_marginBottom="30dp"
        android:layout_toStartOf="@+id/forwardButton2_4"
        android:layout_toLeftOf="@+id/forwardButton2_4"
        android:layout_toEndOf="@+id/backButton2_4"
        android:layout_toRightOf="@+id/backButton2_4"
        android:src="@drawable/home_button" />

    <ImageButton
        android:id="@+id/forwardButton2_4"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentEnd="true"
        android:layout_alignParentRight="true"
        android:layout_alignParentBottom="true"
        android:layout_marginEnd="70dp"
        android:layout_marginRight="70dp"
        android:layout_marginBottom="30dp"
        android:src="@drawable/forward_button" />

    <ImageButton
        android:id="@+id/backButton2_4"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentStart="true"
        android:layout_alignParentLeft="true"
        android:layout_alignParentBottom="true"
        android:layout_marginStart="69dp"
        android:layout_marginLeft="69dp"
        android:layout_marginBottom="30dp"
        android:src="@drawable/back_button" />

</RelativeLayout>