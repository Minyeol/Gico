<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@drawable/appmenu1"
    tools:context=".study.unit8.FragmentContent8_3">

    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_above="@+id/homeButton8_4"
        android:layout_alignParentStart="true"
        android:layout_alignParentLeft="true"
        android:layout_alignParentTop="true"
        android:layout_alignParentEnd="true"
        android:layout_alignParentRight="true"
        android:layout_centerHorizontal="true"
        android:layout_marginStart="30dp"
        android:layout_marginLeft="30dp"
        android:layout_marginTop="29dp"
        android:layout_marginEnd="30dp"
        android:layout_marginRight="30dp"
        android:layout_marginBottom="31dp"
        android:background="@color/white">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical">

            <TextView
                android:id="@+id/textView841"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:text="\n 2차원 배열을 포인터에 담으려면 다음과 같이 특별한 방법이 필요합니다.
\n자료형 (*포인터이름)[가로크기];
\n즉, 포인터를 선언할 때 *과 포인터 이름을 괄호로 묶어준 뒤 [ ]에 가로 크기를 지정합니다.
\n `int (*numPtr)[4];`
\n풀어서 설명하면 가로 크기가 4인 배열을 가리키는 포인터라는 뜻입니다.\n"/>
            <ImageView
                android:adjustViewBounds="true"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:src="@drawable/array14" />

            <TextView
                android:id="@+id/textView842"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:text="이제 2차원 배열을 포인터에 할당해서 사용해보겠습니다."/>

            <ImageView
                android:adjustViewBounds="true"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:src="@drawable/array15" />

            <TextView
                android:id="@+id/textView843"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:text="실행 결과"/>

            <ImageView
                android:adjustViewBounds="true"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:src="@drawable/array16" />

            <TextView
                android:id="@+id/textView844"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:text="int (*numPtr)[4] = numArr;와 같이 2차원 배열을 포인터에 바로 할당할 수 있습니다. 단, 자료형과 가로 크기가 일치해야 합니다.
\n2차원 배열을 포인터에 할당한 뒤 포인터를 역참조해보면 배열의 세로 첫 번째 주솟값이 나옵니다. 즉, 배열이 시작하는 주소입니다. 마찬가지로 2차원 배열 자체도 역참조해보면 배열의 세로 첫 번째 주솟값이 나옵니다.
\n2차원 배열 포인터는 [ ]를 두 번 사용하여 배열의 요소에 접근할 수 있습니다.
\n배열과 포인터가 다른 점은 sizeof로 크기를 계산했을 때입니다. sizeof로 배열의 크기를 구해보면 배열이 메모리에 차지하는 공간이 출력되지만 sizeof로 배열의 주소가 들어있는 포인터의 크기를 구해보면 그냥 포인터의 크기만 나옵니다(32비트라면 4, 64비트라면 8). \n"/>
        </LinearLayout>

    </ScrollView>

    <ImageButton
        android:id="@+id/homeButton8_4"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentBottom="true"
        android:layout_marginStart="28dp"
        android:layout_marginLeft="28dp"
        android:layout_marginEnd="28dp"
        android:layout_marginRight="28dp"
        android:layout_marginBottom="30dp"
        android:layout_toEndOf="@+id/backButton8_4"
        android:layout_toRightOf="@+id/backButton8_4"
        android:src="@drawable/home_button" />


    <ImageButton
        android:id="@+id/backButton8_4"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentStart="true"
        android:layout_alignParentLeft="true"
        android:layout_alignParentBottom="true"
        android:layout_marginStart="69dp"
        android:layout_marginLeft="69dp"
        android:layout_marginBottom="30dp"
        android:src="@drawable/back_button" />
</RelativeLayout>