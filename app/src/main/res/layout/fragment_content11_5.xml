<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@drawable/appmenu1"
    tools:context=".study.unit1.FragmentContent3">

    <!-- TODO: Update blank fragment layout -->

    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_above="@+id/homeButton4_3"
        android:layout_alignParentStart="true"
        android:layout_alignParentLeft="true"
        android:layout_alignParentTop="true"
        android:layout_alignParentEnd="true"
        android:layout_alignParentRight="true"
        android:layout_marginStart="30dp"
        android:layout_marginTop="30dp"
        android:layout_marginEnd="30dp"
        android:layout_marginBottom="30dp"
        android:background="@drawable/edge">
        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical">
            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:text="
 병합 정렬은 배열을 두 개의 부분 배열로 나누는 과정을 반복한 뒤 부분 배열들을 병합하는 알고리즘입니다. 다른 정렬 알고리즘들에 비해 구현이 까다롭지만, 버블 정렬, 선택 정렬, 삽입 정렬의 시간복잡도가 O(n^2)인 것에 반해 병합 정렬의 시간복잡도는 O(nlogn)으로 다른 정렬들에 비해 매우 빠르다는 장점을 가지고 있습니다.\n
 [2, 10, 7, 3, 9, 11, 1, 5]를 병합 정렬 방법을 사용하여 정렬해 봅시다. 먼저 리스트를 [2, 10, 7, 3]과 [9, 11, 1, 5]로 쪼갭니다. 이 리스트를 다시 [2, 10]과 [7, 3], [9, 11]과 [1, 5]로 쪼갠 뒤, 마지막으로 [2], [10], [7], [3], [9], [11], [1], [5]로 배열에 원소가 한 개만 들어 있을 때까지 쪼개 줍니다. 배열에 원소가 한 개만 들어 있을 경우, 그 배열은 당연히 정렬된 배열입니다.\n
 이제 쪼개진 배열들을 다시 합쳐 줄 차례입니다. [2]와 [10]을 합쳐 [2, 10]을 만들고, [7]과 [3]을 합쳐서 [3, 7]을 만들고, [9]와 [11]을 합쳐서 [9, 11]을 만들고, [1]과 [5]를 합쳐서 [1, 5]를 만들어 줍니다. 이제 [2, 10]과 [3, 7]을 합쳐 줄 텐데요, 어떻게 합쳐 줄까요? 먼저 두 정렬된 배열에서 가장 앞에 나오는 2와 3을 비교해, 더 작은 원소인 2를 맨 앞에 넣어 줍니다. 그 다음으로는 [2, 10]의 두 번째 원소인 10과 [3, 7]의 첫 번째 원소인 3을 비교해, 더 작은 원소인 3을 2의 뒤에 넣어 줍니다. 다음으로 10과 7을 비교해 7을 3 뒤에 넣어 주고, 10을 맨 오른쪽에 넣어 줍니다. 이제 두 배열을 합쳐 [2, 3, 7, 10]이 되었습니다.\n
 [9, 11]과 [1, 5]도 같은 방식으로 합쳐 [1, 5, 9, 11]을 만들어 줍니다. 이제 [2, 3, 7, 10]과 [1, 5, 9, 11]을 합치는 과정만 진행하면 됩니다. 그 과정은 다음과 같습니다.\n
\n
 [2, 3, 7, 10]과 [1, 5, 9, 11]의 첫 번째 원소인 2와 1 비교 -> 1이 더 작으니 배열의 첫 번째로, [1]\n
 [2, 3, 7, 10]과 [5, 9, 11]의 첫 번째 원소인 2와 5 비교 -> 2가 더 작으니 배열의 두 번째로, [1, 2]\n
 [3, 7, 10]과 [5, 9, 11]의 첫 번째 원소인 3과 5 비교 -> 3이 더 작으니 배열의 세 번째로, [1, 2, 3]\n
 [7, 10]과 [5, 9, 11]의 첫 번째 원소인 7과 5 비교 -> 5가 더 작으니 배열의 네 번째로, [1, 2, 3, 5]\n
 [7, 10]과 [9, 11]의 첫 번째 원소인 7과 9 비교 -> 7이 더 작으니 배열의 다섯 번째로, [1, 2, 3, 5, 7]\n
 [10]과 [9, 11]의 첫 번째 원소인 10과 9 비교 -> 9가 더 작으니 배열의 여섯 번째로, [1, 2, 3, 5, 7, 9]\n
 [10]과 [11] 비교 -> 10이 더 작으니 10은 배열의 일곱 번째, 11은 배열의 여덟 번째로, [1, 2, 3, 5, 7, 9, 10, 11]\n
" />
            <ImageView
                android:adjustViewBounds="true"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:src="@drawable/sort51" />

            <ImageView
                android:id="@+id/imageView5"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:adjustViewBounds="true"
                android:src="@drawable/sort52" />

            <ImageView
                android:adjustViewBounds="true"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:src="@drawable/sort53" />

            <ImageView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:adjustViewBounds="true"
                android:src="@drawable/sort13" />

        </LinearLayout>
    </ScrollView>

    <ImageButton
        android:id="@+id/homeButton4_3"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentBottom="true"
        android:layout_marginStart="28dp"
        android:layout_marginLeft="28dp"
        android:layout_marginEnd="28dp"
        android:layout_marginRight="28dp"
        android:layout_marginBottom="30dp"
        android:layout_toStartOf="@+id/forwardButton4_3"
        android:layout_toLeftOf="@+id/forwardButton4_3"
        android:layout_toEndOf="@+id/backButton4_3"
        android:layout_toRightOf="@+id/backButton4_3"
        android:src="@drawable/home_button" />

    <ImageButton
        android:id="@+id/backButton4_3"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentStart="true"
        android:layout_alignParentLeft="true"
        android:layout_alignParentBottom="true"
        android:layout_marginStart="69dp"
        android:layout_marginLeft="69dp"
        android:layout_marginBottom="30dp"
        android:src="@drawable/back_button" />

</RelativeLayout>