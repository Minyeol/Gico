<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@drawable/appmenu1"
    tools:context=".study.unit6.FragmentContent6_4">

    <!-- TODO: Update blank fragment layout -->

    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_above="@+id/homeButton4_3"
        android:layout_alignParentStart="true"
        android:layout_alignParentLeft="true"
        android:layout_alignParentTop="true"
        android:layout_alignParentEnd="true"
        android:layout_alignParentRight="true"
        android:layout_marginStart="30dp"
        android:layout_marginTop="30dp"
        android:layout_marginEnd="30dp"
        android:layout_marginBottom="30dp"
        android:background="@drawable/edge">
        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical">
            <TextView
                android:id="@+id/textView641"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:text="    어떤 문제를 더 작은 부분 문제로 쪼개서 풀 수 있을 때 재귀함수가 유용하다고 설명했습니다. 이 사실을 머릿속에 잘 새기면서 각 자릿수의 합을 구하는 재귀함수 sum_digit을 구현해 볼까요?\n
 먼저 base case가 무엇인지 생각해 봅시다. 우리가 구현하고자 하는 함수 sum_digit에 한 자리 수가 들어오면, sum_digit은 그 수를 리턴합니다. 이는 쉬운 문제이므로 sum_digit(unsigned int n)의 n에 0부터 9까지의 수가 들어왔을 때가 base case라고 할 수 있겠습니다.\n
 n이 9보다 클 땐 어떻게 할까요? 예를 들어 sum_digit(4392)를 풀기 위해, 이 문제를 두 부분 문제로 쪼개 봅시다. sum_digit(4392)는 sum_digit(439) + sum_digit(2)로 쪼갤 수 있을 것입니다.\n
 sum_digit(2)는 쉽게 풀 수 있는 문제에 해당하므로 base case에 해당하고, sum_digit(439)는 base case가 아니므로 다시 recursive step을 밟으면서 문제를 더 작은 부분 문제로 쪼개 봅시다. \n
 sum_digit(439)는 sum_digit(43) + sum_digit(9)로 쪼개지고, sum_digit(9)는 base case이며 sum_digit(43)은 또다시 sum_digit(4) + sum_digit(3)으로 쪼개집니다. 이제 sum_digit을 어떻게 구현할지 감이 오시나요?\n
" />
            <ImageView
                android:adjustViewBounds="true"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:src="@drawable/recur41" />

            <ImageView
                android:id="@+id/imageView5"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:adjustViewBounds="true"
                android:src="@drawable/recur42" />

        </LinearLayout>
    </ScrollView>

    <ImageButton
        android:id="@+id/homeButton4_3"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentBottom="true"
        android:layout_marginStart="28dp"
        android:layout_marginLeft="28dp"
        android:layout_marginEnd="28dp"
        android:layout_marginRight="28dp"
        android:layout_marginBottom="30dp"
        android:layout_toStartOf="@+id/forwardButton4_3"
        android:layout_toLeftOf="@+id/forwardButton4_3"
        android:layout_toEndOf="@+id/backButton4_3"
        android:layout_toRightOf="@+id/backButton4_3"
        android:src="@drawable/home_button" />

    <ImageButton
        android:id="@+id/backButton4_3"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentStart="true"
        android:layout_alignParentLeft="true"
        android:layout_alignParentBottom="true"
        android:layout_marginStart="69dp"
        android:layout_marginLeft="69dp"
        android:layout_marginBottom="30dp"
        android:src="@drawable/back_button" />

</RelativeLayout>