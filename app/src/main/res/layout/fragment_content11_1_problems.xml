<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@drawable/appmenu1"
    tools:context=".study.unit1.FragmentContent1">

    <!-- TODO: Update blank fragment layout -->

    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_above="@+id/homeButton3_1"
        android:layout_alignParentStart="true"
        android:layout_alignParentLeft="true"
        android:layout_alignParentTop="true"
        android:layout_alignParentEnd="true"
        android:layout_alignParentRight="true"
        android:layout_marginStart="30dp"
        android:layout_marginTop="30dp"
        android:layout_marginEnd="30dp"
        android:layout_marginBottom="30dp"
        android:background="@drawable/edge">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical">

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:background="@drawable/edge"
                android:gravity="center"
                android:padding="5dp"
                android:text="시간복잡도 평가 (1)"
                android:textSize="25dp" />

            <TextView
                android:id="@+id/textView313"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:autoLink="web"
                android:linksClickable="true"
                android:text="\n\n  다음의 정렬 방법에 대하여 시간복잡도를 평가하시오.\n\n
 * 자연수 k에 대하여 n = k^2 개의 데이터가 주어진다. 예를 들어 n = 9일 때 {1, 6, 8, 7, 3, 5, 9, 4, 2}가 주어진다. 이 n개의 데이터를 k개씩 분할한다. 예를 들어 {1, 6, 8}, {7, 3, 5}, {9, 4, 2}로 분할한다. 각각의 분할된 데이터를 버블 정렬을 사용하여 정렬한다. 이제 데이터는 {1, 6, 8}, {3, 5, 7}, {2, 4, 9}가 된다. 마지막으로 각 배열들의 0번째 인덱스에 해당하는 원소들의 최솟값을 새로운 배열에 넣고, 그 원소를 지운다. 예를 들어 {1, 6, 8}, {3, 5, 7}, {2, 4, 9}에서 1, 2, 3 중 최솟값인 1을 뽑아 새로운 배열 {1}에 넣고, 1을 지우면 {6, 8}, {3, 5, 7}, {2, 4, 9}가 남는다. 이제 2, 3, 6 중 최솟값인 2를 뽑아 {1, 2}를 만들고, 그러면 {6, 8}, {3, 5, 7}, {4, 9}가 남는다. 이 과정을 반복한다.\n\n

 문제를 만든 사람 : 송혜근"
                android:padding="5dp"/>
        </LinearLayout>
    </ScrollView>

    <ImageButton
        android:id="@+id/homeButton3_1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentStart="true"
        android:layout_alignParentLeft="true"
        android:layout_alignParentBottom="true"
        android:layout_marginStart="170dp"
        android:layout_marginLeft="170dp"
        android:layout_marginEnd="28dp"
        android:layout_marginRight="28dp"
        android:layout_marginBottom="30dp"
        android:layout_toStartOf="@+id/forwardButton3_1"
        android:layout_toLeftOf="@+id/forwardButton3_1"
        android:src="@drawable/home_button" />

    <ImageButton
        android:id="@+id/forwardButton3_1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentEnd="true"
        android:layout_alignParentRight="true"
        android:layout_alignParentBottom="true"
        android:layout_marginEnd="70dp"
        android:layout_marginRight="70dp"
        android:layout_marginBottom="30dp"
        android:src="@drawable/forward_button" />

</RelativeLayout>