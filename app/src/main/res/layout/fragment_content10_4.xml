<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@drawable/appmenu1"
    tools:context=".study.unit10.FragmentContent10_4">

    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_above="@+id/homeButton10_4"
        android:layout_alignParentStart="true"
        android:layout_alignParentLeft="true"
        android:layout_alignParentTop="true"
        android:layout_alignParentEnd="true"
        android:layout_alignParentRight="true"
        android:layout_centerHorizontal="true"
        android:layout_marginStart="30dp"
        android:layout_marginLeft="30dp"
        android:layout_marginTop="29dp"
        android:layout_marginEnd="30dp"
        android:layout_marginRight="30dp"
        android:layout_marginBottom="31dp"
        android:background="@color/white">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical">

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:text="\n 앞서 생성한 hi.txt 파일의 내용을 읽어보겠습니다. 파일을 읽을 때는 stdio.h 헤더 파일에 선언된 fopen 함수로 파일을 열어 파일 포인터를 얻고 fgets 함수로 파일의 내용을 읽습니다.
\nfgets 함수는 다음과 같이 사용합니다.
\nfgets(버퍼, 버퍼크기, 파일포인터);

\n  char *fgets(char *_Buffer, int _MaxCount, FILE *_Stream);
\n  성공하면 읽은 문자열의 포인터를 반환하고, 실패하면 NULL을 반환합니다.
\n아래 코드는 함수 사용 예시 입니다.\n"/>

            <ImageView
                android:adjustViewBounds="true"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:src="@drawable/file10" />
            <ImageView
                android:adjustViewBounds="true"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:src="@drawable/file11" />
            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:text="/n 이번에는 stdio.h 헤더 파일에 선언된 fread 함수를 사용해 파일에서 문자열을 읽어보겠습니다.
\nfread 함수는 다음과 같이 사용합니다.
\nfread(버퍼, 읽기크기, 읽기횟수, 파일포인터);
\nsize_t fread(void *_Buffer, size_t _ElementSize, size_t _ElementCount, FILE *_Stream);
\n성공한 읽기 횟수를 반환하고, 실패하면 지정된 읽기 횟수보다 작은 값을 반환합니다.
\n아래 코드는 함수 사용 예시 입니다. /n"/>

            <ImageView
                android:adjustViewBounds="true"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:src="@drawable/file12" />
            <ImageView
                android:adjustViewBounds="true"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginStart="0dp"
                android:layout_marginTop="0dp"
                android:layout_marginEnd="0dp"
                android:src="@drawable/file13" />

        </LinearLayout>

    </ScrollView>

    <ImageButton
        android:id="@+id/homeButton10_4"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentBottom="true"
        android:layout_marginStart="28dp"
        android:layout_marginLeft="28dp"
        android:layout_marginEnd="28dp"
        android:layout_marginRight="28dp"
        android:layout_marginBottom="30dp"
        android:layout_toEndOf="@+id/backButton10_4"
        android:layout_toRightOf="@+id/backButton10_4"
        android:src="@drawable/home_button" />

    <ImageButton
        android:id="@+id/backButton10_4"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentStart="true"
        android:layout_alignParentLeft="true"
        android:layout_alignParentBottom="true"
        android:layout_marginStart="69dp"
        android:layout_marginLeft="69dp"
        android:layout_marginBottom="30dp"
        android:src="@drawable/back_button" />

</RelativeLayout>